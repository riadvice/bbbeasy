; BBBEasy open source platform - https://riadvice.tn/
;
; Copyright (c) 2022-2023 RIADVICE SUARL and by respective authors (see below).
;
; This program is free software; you can redistribute it and/or modify it under the
; terms of the GNU Lesser General Public License as published by the Free Software
; Foundation; either version 3.0 of the License, or (at your option) any later
; version.
;
; BBBEasy is distributed in the hope that it will be useful, but WITHOUT ANY
; WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
; PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
;
; You should have received a copy of the GNU Lesser General Public License along
; with BBBEasy; if not, see <http://www.gnu.org/licenses/>.

[routes]
; default route
GET  @home  : /api = Actions\Core\Main->execute
GET  @file  : /api/@filename = Actions\Core\GetFile->execute
; WebSocket
GET  @hvsocket  : /api/hvs = Actions\Core\HVSocket->execute

; assets routes
GET  @locale     : /api/locale/json/@locale.json     = Actions\Core\GetLocale->execute
PUT  @set_locale : /api/set-locale/@locale    [ajax] = Actions\Account\SetLocale->execute

; account routes
POST @register          : /api/account/register           = Actions\Account\Register->signup
POST @login             : /api/account/login              = Actions\Account\Login->authorise
GET  @logout            : /api/account/logout             = Actions\Account\Logout->execute
POST @reset             : /api/account/reset-password     = Actions\Account\ResetPassword->execute
POST @change_password   : /api/account/change-password    = Actions\Account\ChangePassword->execute
GET  @get_reset_token   : /api/account/reset-token/@token = Actions\Account\GetResetPasswordToken->execute
PUT  @account_edit      : /api/account/edit               = Actions\Account\Edit->save

; settings routes
POST @settings_save_logo : /api/settings                  = Actions\Settings\SaveLogo->execute
GET  @settings_collect   : /api/settings                  = Actions\Settings\Collect->execute
PUT  @settings_edit      : /api/settings                  = Actions\Settings\Edit->save


; preset settings routes
GET  @preset_settings_collect   : /api/preset-settings    = Actions\PresetSettings\Collect->execute
PUT  @preset_settings_edit      : /api/preset-settings    = Actions\PresetSettings\Edit->save

; logs routes
POST    @logs_collect   : /api/logs                  = Actions\Logs\Collect->execute

; roles routes
GET     @roles_index    : /api/roles                 = Actions\Roles\Index->show
POST    @roles_add      : /api/roles                 = Actions\Roles\Add->save
PUT     @roles_edit     : /api/roles/@id             = Actions\Roles\Edit->save
DELETE  @role_delete    : /api/roles/@id             = Actions\Roles\Delete->execute
GET     @roles_collect  : /api/roles/collect         = Actions\Roles\Collect->execute

; roles permissions routes
GET @roles_permissions_collect : /api/roles-permissions = Actions\RolesPermissions\Collect->execute

; users routes
GET     @users_index    : /api/users                 = Actions\Users\Index->show
POST    @users_add      : /api/users                 = Actions\Users\Add->save
PUT     @users_edit     : /api/users/@id             = Actions\Users\Edit->save
DELETE  @user_delete    : /api/users/@id             = Actions\Users\Delete->execute

; presets routes
GET     @presets_index              : /api/presets/@user_id             = Actions\Presets\Index->show
POST    @presets_add                : /api/presets                      = Actions\Presets\Add->save
PUT     @presets_edit               : /api/presets/@id                  = Actions\Presets\Edit->rename
PUT     @presets_edit_subcategories : /api/presets/subcategories/@id    = Actions\Presets\EditSubcategories->save
GET     @presets_copy               : /api/presets/copy/@id             = Actions\Presets\Copy->save
DELETE  @preset_delete              : /api/presets/@id                  = Actions\Presets\Delete->execute

; labels routes
GET     @labels_index   : /api/labels                = Actions\Labels\Index->show
POST    @labels_add     : /api/labels                = Actions\Labels\Add->save
PUT     @labels_edit    : /api/labels/@id            = Actions\Labels\Edit->save
DELETE  @label_delete   : /api/labels/@id            = Actions\Labels\Delete->execute

; rooms routes
GET     @rooms_index    : /api/rooms/@user_id        = Actions\Rooms\Index->show
POST    @rooms_add      : /api/rooms                 = Actions\Rooms\Add->save
PUT     @rooms_edit     : /api/rooms/@id             = Actions\Rooms\Edit->rename
POST    @rooms_start    : /api/rooms/@id             = Actions\Rooms\Start->execute
DELETE  @room_delete    : /api/rooms/@id             = Actions\Rooms\Delete->execute
GET     @rooms_view     : /api/rooms/get/@link       = Actions\Rooms\View->show

; recordings routes
GET     @recordings_collect         : /api/recordings                   = Actions\Recordings\Collect->execute
GET     @recordings_index           : /api/recordings/@room_id          = Actions\Recordings\Index->show
PUT     @recordings_edit            : /api/recordings/@id               = Actions\Recordings\Edit->save
DELETE  @recording_delete           : /api/recordings/@id               = Actions\Recordings\Delete->execute

; notification routes
GET     @warning_notification       : /api/notification     = Actions\Notification\WarningNotification->execute


; room presentations routes
GET     @presentations_index    : /api/presentations/@room_id      = Actions\RoomPresentations\Index->execute
POST    @presentations_add      : /api/presentations               = Actions\RoomPresentations\Add->save
DELETE  @presentations_delete   : /api/presentations/@id           = Actions\RoomPresentations\Delete->execute
